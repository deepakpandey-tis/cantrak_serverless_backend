
service: ${self:custom.serviceName}
  
  # You can pin your service to only deploy with a specific Serverless version
  # Check out our docs for more details
  # frameworkVersion: "=X.X.X"
  
plugins:
  - serverless-offline
  # - serverless-s3-local

package:
  patterns:
    - '!.vscode/**'
    - '!.serverless/**'


provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: ap-southeast-1
  memorySize: 2560
  timeout: 29
  tracing:
    apiGateway: true
    lambda: true
  iam: 
    role: 
      statements:
        - Effect: Allow
          Action:
            - s3:*
          Resource: 
            - arn:aws:s3:::*
        - Effect: Allow
          Action:
            - sqs:*
          Resource: 
            - arn:aws:sqs:::*
        - Effect: Allow
          Action:
            - sns:*
          Resource: 
            - arn:aws:sns:::*
        - Effect: Allow
          Action:
            - rekognition:*
          Resource: 
            - arn:aws:rekognition:::*
        - Effect: Allow
          Action:
            - ses:*
          Resource: 
            - arn:aws:ses:::*
        - Effect: Allow
          Action:
            - cloudwatch:*
          Resource: 
            - arn:aws:cloudwatch:::*
        - Effect: Allow
          Action:
            - events:*
          Resource: 
            - arn:aws:events:::*                    
      managedPolicies:
        - arn:aws:iam::aws:policy/AmazonElasticFileSystemClientReadWriteAccess              
  environment:
    ENV: ${self:provider.stage}
    REGION: ${self:provider.region}
    DB_USER: pg888
    DB_PASS: password
    DB_NAME: pg888
    DB_HOST: 127.0.0.1
    DB_PORT: 5432
    SITE_URL: https://d1rjriqru0gswu.cloudfront.net
    ORIGIN_URL: http://localhost:3000/
    JWT_PRIVATE_KEY: t6785464sdxfkgxhil8ed@gus4560*&%$%5664)bu54654645
    JWT_ACCESS_TOKEN_EXPIRY_TIME: 15m
    JWT_REFRESH_TOKEN_EXPIRY_TIME: 96h
    S3_BUCKET_NAME: pg888-resources
    VAPID_PUBLIC_KEY: BMpCMLxldme4F8BHAKyz41cAEh8FgFvibgwdJrM7LH8Th5t47J84NVGZiPhuTOEKRBOzfsJMAgXQueLjPyoc8z0
    VAPID_PRIVATE_KEY: MwnSWApwHAJZXnhk6K1s9jqS_ndArrcMSGuI60c7gZc
    ACCESS_KEY_ID: AKIA2PLM3DNSLWMFB57N
    SECRET_ACCESS_KEY: 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
    SQS_MAIL_QUEUE_URL: https://sqs.ap-southeast-1.amazonaws.com/720172161892/mail-queue
    SQS_LONG_JOBS_URL: https://sqs.ap-southeast-1.amazonaws.com/720172161892/long-jobs
    FROM_EMAIL_ADDRESS: no-reply@servicemind.asia
    APP_ENV: DEV
    S3_BUCKET_URL:  https://pg888-resources.s3.ap-southeast-1.amazonaws.com
    SOCKET_ENDPOINT: ws://0.0.0.0:3001
    # CDN_URL: resources.servicemind.asia
    REDIS_HOST: 127.0.0.1
    REDIS_PORT: 6379
    MNT_DIR: ${self:custom.localMountPath}
    GOOGLE_CLIENT_SECRET: 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
    GOOGLE_CLIENT_ID: 551396889611-ila27c0q57k5cjv6dgc9l2l31dhr2vr4.apps.googleusercontent.com
    GOOGLE_REDIRECT_URL: google-auth-callback

  vpc:
    securityGroupIds:
      - sg-085a4849cdbd4f122
    subnetIds:
      - subnet-0b3c1343fe17b1d83
      - subnet-020fa487922cff8e2
  

custom:
  serviceName: servicemind
  awsAccountId: 823924714513
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}}
  bucket: servicemind-resources-staging
  defaultStage: dev
  profiles:
    dev: dev
    stage: stage
    prod: prod
  efsAccessPoint: fsap-0197f4070e2a915ba
  localMountPath: /mnt/efs
  
  
functions:
  app:
    handler: src/app.server # reference the file and exported method
    events: # events trigger lambda functions
      - http: # this is an API Gateway HTTP event trigger
          path: /
          method: ANY
          # cors: true
      - http: # all routes get proxied to the Express router
          path: /{proxy+}
          method: ANY
          # cors: true
  
  websocket:
    handler: src/handlers/socket.handler
    memorySize: 2048
    events:
      - websocket:
          # Handles new connection requests
          route: $connect
          # Only the '$connect' route supports an authorizer. The other routes
          # are secured via the connection ID and there it should be handled
          # like a session ID.
          authorizer:
            name: auth
            # See https://serverless.com/framework/docs/providers/aws/events/websocket#using-authorizers
            # and https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-identitysource
            # for more details on identitySource.
            # See https://docs.aws.amazon.com/apigateway/latest/developerguide/request-response-data-mappings.html
            # for more details on API Gateway mappings.
            identitySource:
              # - "route.request.header.Auth"
              - "route.request.querystring.Auth"

      - websocket:
          # Route messages here if '$request.body.action' is 'routeA'.
          # You can adjust which property to use for routing by adjusting
          # 'websocketsApiRouteSelectionExpression'.
          route: api

      - websocket:
          # Handles all unrouted messages
          route: $default

      - websocket:
          # Handles disconnect messages
          route: $disconnect

  auth:
    handler: src/handlers/socket.auth
          

  workOrderOverdueProcessor:
    handler: src/handlers/daily-tasks.workOrderOverdueProcessor
    memorySize: 512
    timeout: 300
    events:
      - schedule:
          rate: rate(1 hour)
          enabled: true


  dailyDigestProcessor:
    handler: src/handlers/daily-tasks.dailyDigestProcessor
    memorySize: 1024
    timeout:  899                     # Max Time out is 15 mins..
    events:
      - schedule:
          rate: cron(0 1 * * ? *)    # Utc 1 am every day i.e 8 am Morning Thai Time..
          enabled: true


  syncGoogleCalendarEvents:
    handler: src/handlers/daily-tasks.syncGoogleCalendarEvents
    memorySize: 1024
    timeout:  899                     # Max Time out is 15 mins..
    events:
      - schedule:
          #rate: cron(53 11 * * ? *)    # Utc 9 pm every day i.e 4 am Morning Thai Time..
          rate: rate(5 minutes)
          enabled: true